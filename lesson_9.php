<?php
    $title = "Главная страница"; // устанавливаем переменную для отображения названия страницы, вносим изменения в хедер ОБЯЗАТЕЛЬНО
    // подключаем файлы header.php и footer.php к нашему основному файлу. Это нужно, когда в разных файлах код повторяется
    // если страница не найдена, то код выдаст ошибку
    require "blocks/header.php"; // 1. вверху мы подлючаем шапку

?>

<h1>Главная страница</h1>

<?php
    echo "<br>" . "<h3>Урок про дату:</h3>";

    // 4. прописываем нужные нам дату и время, все данные расположены - php date format
    echo $today = date ('d.m.y H:i'). "- Настоящая дата". "<br>";
    // 5. мы можем выводить прошлую дату
    echo date ('d.m.y H:i', strtotime ("-1 Year -1 Month -1 Day -1 Hour -1 Minute")). "- Прошлая дата". "<br>";
    // 6. мы можем выводить будущую дату
    echo date ('d.m.y H:i', strtotime ("+1 Year +1 Month +1 Day +1 Hour +1 Minute")). "- Будущая дата". "<br>";
    // 7. можно использовать слова: Last, now, дни недели
    echo date ('d.m.y H:i', strtotime ("Last Monday")). "- конкретный день в прошлом". "<br>";
?>

<?php
    echo "<br>" . "<h3>Урок про встроенные функции:</h3>";

    // 8. функции по работе с массивом
    $lis = [3, 6, 8, 0, 10, 109]; // 9. создаем массив
    print_r ($lis); // 10. выводим массив такой, какой он есть
    echo "<br>";

    unset ($lis[1]); // 11. функция для удаления элемента по индексу, все присвоенные ранее индексы остаются у элементов
    print_r ($lis);
    echo "<br>";

    $lis = array_values($lis); // 12. функция для обновлений индекса у массива, где было удаление элемента
    print_r ($lis);
    echo "<br>";

    sort($lis); // 13. функция для сортировки элементов массива по порядку
    print_r ($lis);
    echo "<br>";

    rsort($lis); // 14. функция для сортировки элементов массива в обратном порядке
    print_r ($lis);
    echo "<br>";

    shuffle($lis); //15. функция, которая выводит элементы массива в хаотичном порядке
    print_r ($lis);
    echo "<br>";

    $variable = 10;
?>

<?php
    echo "<br> <br> <br> <br>";
    require "blocks/footer.php"; // 2. внизу мы подключаем футер
?>

<!-- 3. мы можем использовать - include "blocks/header.php"; для подключения другой страницы, если такой страницы нет,
ошибка не возникнет, просто код пропустится, а остальной код будет выполнен
3.1 при использовании - include_once "blocks/header.php"; код выведется один раз, а если использовать просто include,
то код будет выведен несколько раз
3.2 а если используем - require_once "blocks/footer.php"; и страница не найдена, то код выдаст ошибку -->
