<?php
    $title = "Главная страница"; // устанавливаем переменную для отображения названия страницы, вносим изменения в хедер ОБЯЗАТЕЛЬНО
    // подключаем файлы header.php и footer.php к нашему основному файлу. Это нужно, когда в разных файлах код повторяется
    // если страница не найдена, то код выдаст ошибку
    require "blocks/header.php"; // 1. вверху мы подлючаем шапку

?>

<h1>Главная страница</h1>

<?php
    echo "<br>" . "<h3>Урок про дату:</h3>";

    // 4. прописываем нужные нам дату и время, все данные расположены - php date format
    echo $today = date ('d.m.y H:i'). "- Настоящая дата". "<br>";
    // 5. мы можем выводить прошлую дату
    echo date ('d.m.y H:i', strtotime ("-1 Year -1 Month -1 Day -1 Hour -1 Minute")). "- Прошлая дата". "<br>";
    // 6. мы можем выводить будущую дату
    echo date ('d.m.y H:i', strtotime ("+1 Year +1 Month +1 Day +1 Hour +1 Minute")). "- Будущая дата". "<br>";
    // 7. можно использовать слова: Last, now, дни недели
    echo date ('d.m.y H:i', strtotime ("Last Monday")). "- конкретный день в прошлом". "<br>";
?>

<?php
    echo "<br>" . "<h3>Урок про встроенные функции:</h3>";

    // 8. функции по работе с массивом
    $lis = [3, 6, 8, 0, 10, 109]; // 9. создаем массив
    print_r ($lis); // 10. выводим массив такой, какой он есть
    echo "<br>";

    unset ($lis[1]); // 11. функция для удаления элемента по индексу, все присвоенные ранее индексы остаются у элементов
    print_r ($lis);
    echo "<br>";

    $lis = array_values($lis); // 12. функция для обновлений индекса у массива, где было удаление элемента
    print_r ($lis);
    echo "<br>";

    sort($lis); // 13. функция для сортировки элементов массива по порядку
    print_r ($lis);
    echo "<br>";

    rsort($lis); // 14. функция для сортировки элементов массива в обратном порядке
    print_r ($lis);
    echo "<br>";

    shuffle($lis); // 15. функция, которая выводит элементы массива в хаотичном порядке
    print_r ($lis);
    echo "<br>";

    // 16. если нужно найти определенный элемент массива
    echo in_array(-1, $lis); // выводит - 1, если True, ничего не выводит, если нет такого элемента - False
    if (in_array(3, $lis) == "") {
        echo "Нет такого элемента";
    } else {
        echo "Элемент найден" . "<br>";
    }

    // 17. можно обрезать массив, выбрав элементы от и до
    $arr = array_slice($lis, 0, count($lis)); // выбираем элементы от 0 и до конца - count считает кол-во элементов
    print_r($arr);
    echo "<br>";

    $arr2 = array_slice($lis, 1, 3); // выбираем элементы от 0 и до конца - count считает кол-во элементов
    // выбирает 1,2,3 индекс массива и выводит
    print_r($arr2);
    echo "<br>";

    // 18. мы можем объединить 2 массива
    $array_1 = [1, 2, 3];
    $array_2 = [4, 5, 6, 7];
    $array_3 = array_merge($array_1, $array_2);
    print_r($array_3);
    echo "<br>";

    // 19. мы можем проверить тип переменной
    $var = 10;
    echo gettype($var);
    echo "<br>";

    echo is_numeric($var); // 20. проверяем, является ли переменная числом, True = 1, False = "", переменная "10" будет числом
    echo "<br>";

    echo is_double($var); // 21. проверяем тип, является ли переменная числом с точкой, True = 1, False = ""
    echo "<br>";

    echo is_string($var); // 22. проверяем тип, является ли переменная строкой, True = 1, False = ""
    echo "<br>";

    echo is_bool($var); // 23. проверяем тип, является ли переменная булевым значением, True = 1, False = ""
    echo "<br>";

    echo is_array($var); // 24. проверяем тип, является ли переменная массивом, True = 1, False = ""
    echo "<br>";

    echo is_integer($var); // 25. проверяем тип, является ли переменная числом, True = 1, False = ""
    echo "<br>";

    // 20. встроенные функции для работы со строками
    $str = "Example";
    if (strpos($str, 'e') == '') { // 21. strpos($, "") - определяет, есть ли такой символ в тексте
        echo "Такого символа нет";
    } else {
        echo "Такой символ есть в тексте";
    }
    echo "<br>";

    // 21. можно разделить текст в переменной, по какому-то символу
    $words = "roman, dasha, robert";
    $arr_words = explode(",", $words); // 22. создали массив и в него упаковали наши элементы, которые разделили по символу ","
    print_r ($arr_words);
    echo "<br>";

    echo implode (" | ", $arr_words); // 23. можно собрать в строку все элементы из массива

?>

<?php
    echo "<br> <br>" . "<h3>Урок про работе с файлами:</h3>";

    $filename = "fb.txt"; // 25. создали переменную с именем файла для удобства
    $file = fopen ($filename, "r"); // 26. открыли файл для чтения
    $content = fread($file, filesize($filename)); // 27. создали переменную для чтения, указывая размерность файла - filesize()
    fclose($file); // 28. закрыли файл

    echo "<pre>" . $content . "<pre>"; /* 29. выводим содержимое файла. для html наши переводы строки ничего не значат,
    поэтому используем "<pre>" */

    // 30. дополнительные функции для файлов ,которые помогают в работе:
    // file_put_contents ("a.txt", 'Example\nHello'); // 31. создает файл и записывает текст в одну строчку
    // echo file_get_contents ("fb.txt"); // 32. выводит на экран содержимое файлп
    // echo file_exists("fb.txt"); // 33. показывает, существует ли файл: 1 - да, пустое место - нет
    // rename("a.txt", "new_name.txt"); // 34. переименовываем файл, сначала указываем файл, потом новое название
    // unlink("new_name.txt"); // 35. удаление файла

    echo __FILE__; // 36. полный путь к текущему файлу
    echo "<br>" . fileperms(__FILE__); // 37. смотрим разрешение файла - права доступа
    chmod(__FILE__, 0777); // поменять права доступа - 0000 - закрыть права для всех, нельзя редактировать

?>

<?php
    echo "<br> <br> <br> <br>";
    require "blocks/footer.php"; // 2. внизу мы подключаем футер
?>

<!-- 3. мы можем использовать - include "blocks/header.php"; для подключения другой страницы, если такой страницы нет,
ошибка не возникнет, просто код пропустится, а остальной код будет выполнен
3.1 при использовании - include_once "blocks/header.php"; код выведется один раз, а если использовать просто include,
то код будет выведен несколько раз
3.2 а если используем - require_once "blocks/footer.php"; и страница не найдена, то код выдаст ошибку -->
